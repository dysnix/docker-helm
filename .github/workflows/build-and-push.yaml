name: Build and Push Image
on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Input version string (semver tag or tagref) to genarte images for'
        required: false

defaults:
  run:
    shell: bash -leo pipefail {0}

env:
  VERSION_REGEX: ^(refs\/tags\/)?v([0-9]+.[0-9]+.[0-9]+(-r[0-9]+)?)$
  # DOCKER_IMAGE - overrides the docker image name (name is repo name with docker- prefix stripped)

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.set.outputs.image }}
      tag: v${{ steps.kubever.outputs.fullversion }}
      version: ${{ steps.kubever.outputs.version }}
      minor_version: ${{ steps.kubever.outputs.minorversion }}
      ## Note!: prerelease (-r\d+) is used as the release id
      release_id: ${{ steps.kubever.outputs.prerelease }}
      push: ${{ steps.kubever.outputs.failed != 'false' }}
    steps:
      -
        uses: actions/github-script@v4
        id: set
        with:
          script: |
            const image = '${{ github.event.repository.full_name }}'.toLowerCase().replace(/\/docker-/, '/')
            core.setOutput('image', '${{ env.DOCKER_IMAGE }}' ? '${{ env.DOCKER_IMAGE }}' : image)
      -
        name: Kubectl Version
        id: kubever
        uses: dysnix/ws-action-parse-semver@upgrade
        with:
          string: '${{ github.event.inputs.version }}'
          extractor_regex: '${{ env.VERSION_REGEX }}'
          extractor_group: 2

  build:
    name: Build Image
    runs-on: ubuntu-latest
    needs: [setup]

    strategy:
      matrix:
        flavor: [default, gcloud]
        include:
          - flavor: default
            image: alpine
          - flavor: gcloud
            image: google/cloud-sdk:alpine
            suffix: -gcloud

    steps:
      - uses: actions/checkout@v2
      -
        uses: dysnix/find-latest-tag@v1
        id: latest
        with:
          compared-to-tag: ${{ needs.setup.outputs.tag }}
          repository: ${{ github.repository }}
      -
        uses: dysnix/find-latest-tag@v1
        id: latestMinor
        with:
          regex: ${{ needs.setup.outputs.minor_version }}
          compared-to-tag: ${{ needs.setup.outputs.tag }}
          repository: ${{ github.repository }}
      -
        uses: actions/github-script@v4
        id: set
        if: steps.latest.outputs.older == 'false'
        with:
          script: |
            core.setOutput('latestValue', '${{ matrix.flavor }}' !== 'default' ?
              '${{ matrix.flavor }}' : 'latest'
            );
      -
        name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ needs.setup.outputs.image }}
          flavor: |
            latest=false
            suffix=${{ matrix.suffix }}
          ## !!!!NOTE: force-push of v1.2.3-r* tags with lower release id overwrites v1.2.3 image!
          tags: |
            type=semver,pattern=v{{version}},value=${{ needs.setup.outputs.version }}
            type=semver,pattern=v{{version}},value=${{ needs.setup.outputs.version }},suffix=${{ matrix.suffix }}-${{ needs.setup.outputs.release_id }},enable=${{ needs.setup.outputs.release_id != '' }}
            type=semver,pattern=v{{major}}.{{minor}},value=${{ needs.setup.outputs.version }},enable=${{ steps.findMinor.outputs.older == 'false' }}
            type=raw,value=${{ steps.set.outputs.latestValue }},suffix=
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ matrix.flavor }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-${{ matrix.flavor }}
      -
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: ${{ needs.setup.outputs.push }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
          build-args: |
            KUBECTL_VERSION=${{ needs.setup.outputs.version }}
            FLAVOR_IMAGE=${{ matrix.image }}
      -
        # Temp fix
        # https://github.com/docker/build-push-action/issues/252
        # https://github.com/moby/buildkit/issues/1896
        name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
