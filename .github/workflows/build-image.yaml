name: Build Image
on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Input version (SemVer) tag of tagref to genarte images for'
        required: false

defaults:
  run:
    shell: bash -leo pipefail {0}

env:
  VERSION_REGEX: ^(refs\/tags\/)?v([0-9]+.[0-9]+.[0-9]+.*)$
  # DOCKER_IMAGE - overrides the docker image name (name is repo name with docker- prefix stripped)

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.set.outputs.image }}
      kubeVer: ${{ steps.kubever.outputs.patchversion }}
      kubeTag: v${{ steps.kubever.outputs.patchversion }}
      kubeMinor: ${{ steps.kubever.outputs.minor }}
      push: ${{ steps.kubever.outputs.failed != 'true' }}
    steps:
      -
        uses: actions/github-script@v4
        id: set
        with:
          script: |
            const repo = '${{ github.event.repository.name }}'.toLowerCase().replace(/^docker-/, '')
            const versionRegex = new RegExp('${{ env.VERSION_REGEX }}')
            // docker image
            core.setOutput('image', '${{ env.DOCKER_IMAGE }}' ?
              '${{ env.DOCKER_IMAGE }}' :
              `${{ github.event.organization.login }}/${ repo }`
            )
      -
        name: Kubectl Version
        id: kubever
        uses: dysnix/ws-action-parse-semver@upgrade
        with:
          string: '${{ github.event.inputs.version }}'
          extractor_regex: '${{ env.VERSION_REGEX }}'
          extractor_group: 2
      - name: Ouptuts
        run: |
          echo '${{ toJSON(steps.kubever.outputs) }}'

